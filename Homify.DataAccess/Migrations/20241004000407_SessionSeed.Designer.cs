// <auto-generated />
using System;
using Homify.DataAccess.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Homify.DataAccess.Migrations
{
    [DbContext(typeof(HomifyDbContext))]
    [Migration("20241004000407_SessionSeed")]
    partial class SessionSeed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Homify.BusinessLogic.Companies.Company", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LogoUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Rut")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId")
                        .IsUnique();

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("Homify.BusinessLogic.Devices.Device", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CompanyId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PpalPicture")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Devices");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("Homify.BusinessLogic.HomeDevices.HomeDevice", b =>
                {
                    b.Property<string>("HomeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DeviceId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Connected")
                        .HasColumnType("bit");

                    b.Property<string>("HardwareId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("MovementDetection")
                        .HasColumnType("bit");

                    b.Property<bool>("PeopleDetection")
                        .HasColumnType("bit");

                    b.HasKey("HomeId", "DeviceId");

                    b.HasIndex("DeviceId");

                    b.ToTable("HomeDevices");
                });

            modelBuilder.Entity("Homify.BusinessLogic.HomeUsers.HomeUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("HomeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsNotificable")
                        .HasColumnType("bit");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("HomeId");

                    b.HasIndex("UserId");

                    b.ToTable("HomeUsers", (string)null);
                });

            modelBuilder.Entity("Homify.BusinessLogic.Homes.Entities.Home", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Latitude")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Longitude")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaxMembers")
                        .HasColumnType("int");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Homes");
                });

            modelBuilder.Entity("Homify.BusinessLogic.Homes.Entities.HomePermission", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HomePermission");

                    b.HasData(
                        new
                        {
                            Id = "2",
                            Value = "AddDevices"
                        },
                        new
                        {
                            Id = "3",
                            Value = "ListDevices"
                        });
                });

            modelBuilder.Entity("Homify.BusinessLogic.Notifications.Entities.Notification", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTimeOffset?>("Date")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeviceId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Event")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("DeviceId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("Homify.BusinessLogic.Roles.Role", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = "AdminId",
                            Name = "ADMINISTRATOR"
                        },
                        new
                        {
                            Id = "CompanyOwnerId",
                            Name = "COMPANYOWNER"
                        },
                        new
                        {
                            Id = "HomeOwnerId",
                            Name = "HOMEOWNER"
                        });
                });

            modelBuilder.Entity("Homify.BusinessLogic.Sessions.Entities.Session", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AuthToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Sessions");

                    b.HasData(
                        new
                        {
                            Id = "SeedAdminSessionId",
                            AuthToken = "SomeAdminToken123",
                            UserId = "SeedAdminId"
                        },
                        new
                        {
                            Id = "SeedHomeOwnerSessionId",
                            AuthToken = "SomeHomeOwnerToken123",
                            UserId = "SeedHomeOwnerId"
                        },
                        new
                        {
                            Id = "SeedCompanyOwnerSessionId",
                            AuthToken = "SomeCompanyOwnerToken123",
                            UserId = "SeedCompanyOwnerId"
                        });
                });

            modelBuilder.Entity("Homify.BusinessLogic.SystemPermissions.SystemPermission", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SystemPermissions");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            Value = "admins-Create"
                        },
                        new
                        {
                            Id = "2",
                            Value = "admins-Delete"
                        },
                        new
                        {
                            Id = "3",
                            Value = "admins-AllAccounts"
                        },
                        new
                        {
                            Id = "4",
                            Value = "company-owners-Create"
                        },
                        new
                        {
                            Id = "5",
                            Value = "homes-ObtainCompanies"
                        },
                        new
                        {
                            Id = "6",
                            Value = "companies-Create"
                        },
                        new
                        {
                            Id = "7",
                            Value = "devices-RegisterCamera"
                        },
                        new
                        {
                            Id = "8",
                            Value = "companies-RegisterSensor"
                        },
                        new
                        {
                            Id = "9",
                            Value = "homes-Create"
                        },
                        new
                        {
                            Id = "10",
                            Value = "homes-UpdateMembersList"
                        },
                        new
                        {
                            Id = "11",
                            Value = "homes-UpdateHomeDevice"
                        },
                        new
                        {
                            Id = "12",
                            Value = "homes-ObtainMembers"
                        },
                        new
                        {
                            Id = "13",
                            Value = "homes-ObtainHomeDevices"
                        },
                        new
                        {
                            Id = "14",
                            Value = "homes-NotificatedMembers"
                        },
                        new
                        {
                            Id = "15",
                            Value = "notifications-ObtainNotifications"
                        },
                        new
                        {
                            Id = "16",
                            Value = "notifications-UpdateNotification"
                        },
                        new
                        {
                            Id = "17",
                            Value = "devices-ViewRegistered"
                        },
                        new
                        {
                            Id = "18",
                            Value = "companies-ViewSupported"
                        },
                        new
                        {
                            Id = "19",
                            Value = "notifications-Create"
                        });
                });

            modelBuilder.Entity("Homify.BusinessLogic.Users.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("Homify.DataAccess.Contexts.HomifyDbContext+HomeUserHomePermission", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("HomePermissionId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("HomeUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("HomePermissionId");

                    b.HasIndex("HomeUserId");

                    b.ToTable("HomeUserHomePermission");
                });

            modelBuilder.Entity("Homify.DataAccess.Contexts.HomifyDbContext+RoleSystemPermission", b =>
                {
                    b.Property<string>("RoleSystemPermissionId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PermissionId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("RoleSystemPermissionId");

                    b.HasIndex("PermissionId");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleSystemPermissions");

                    b.HasData(
                        new
                        {
                            RoleSystemPermissionId = "008a9683-4d1a-4708-8a4c-b6369e701ccb",
                            PermissionId = "1",
                            RoleId = "AdminId"
                        },
                        new
                        {
                            RoleSystemPermissionId = "c2576a5b-3685-42c7-9f17-fb2d1401453b",
                            PermissionId = "2",
                            RoleId = "AdminId"
                        },
                        new
                        {
                            RoleSystemPermissionId = "6721140a-4f41-4451-a4f1-1e6db130201c",
                            PermissionId = "3",
                            RoleId = "AdminId"
                        },
                        new
                        {
                            RoleSystemPermissionId = "880623b8-7089-4efe-9687-8cc2dac3e3ef",
                            PermissionId = "4",
                            RoleId = "AdminId"
                        },
                        new
                        {
                            RoleSystemPermissionId = "c532bb80-86fe-42d1-9132-2ad74253e657",
                            PermissionId = "5",
                            RoleId = "AdminId"
                        },
                        new
                        {
                            RoleSystemPermissionId = "ed01395e-bda7-4a46-9f44-59a8484d95c9",
                            PermissionId = "6",
                            RoleId = "CompanyOwnerId"
                        },
                        new
                        {
                            RoleSystemPermissionId = "ee545e9b-4913-4d34-8388-f4f2ace4b0a1",
                            PermissionId = "7",
                            RoleId = "CompanyOwnerId"
                        },
                        new
                        {
                            RoleSystemPermissionId = "64a83ff6-8126-45c7-9ac0-235861c6d5c3",
                            PermissionId = "8",
                            RoleId = "CompanyOwnerId"
                        },
                        new
                        {
                            RoleSystemPermissionId = "3e98c87e-f8ca-4e73-90ad-a06984a25bee",
                            PermissionId = "9",
                            RoleId = "HomeOwnerId"
                        },
                        new
                        {
                            RoleSystemPermissionId = "24eab801-1827-43b2-9190-2f916dea2cb0",
                            PermissionId = "10",
                            RoleId = "HomeOwnerId"
                        },
                        new
                        {
                            RoleSystemPermissionId = "f497fb9e-5140-4b02-9a3a-1095ca1e8e43",
                            PermissionId = "11",
                            RoleId = "HomeOwnerId"
                        },
                        new
                        {
                            RoleSystemPermissionId = "6e4909e2-f77c-4a9d-9464-f8b190a688b9",
                            PermissionId = "12",
                            RoleId = "HomeOwnerId"
                        },
                        new
                        {
                            RoleSystemPermissionId = "7abf535c-836f-4f36-a09f-c0a787ed45d9",
                            PermissionId = "13",
                            RoleId = "HomeOwnerId"
                        },
                        new
                        {
                            RoleSystemPermissionId = "c2838d8c-c4d0-4dcb-9a22-238b5cbd289f",
                            PermissionId = "14",
                            RoleId = "HomeOwnerId"
                        },
                        new
                        {
                            RoleSystemPermissionId = "f3dfc1e6-4289-431e-9c0d-b57c4299811b",
                            PermissionId = "15",
                            RoleId = "HomeOwnerId"
                        },
                        new
                        {
                            RoleSystemPermissionId = "abd55416-48ea-410a-bd0f-6be31951abcc",
                            PermissionId = "16",
                            RoleId = "HomeOwnerId"
                        },
                        new
                        {
                            RoleSystemPermissionId = "5234a889-de30-417c-9ccf-9e5e052638d9",
                            PermissionId = "17",
                            RoleId = "HomeOwnerId"
                        },
                        new
                        {
                            RoleSystemPermissionId = "f0c54312-1dd2-49c5-8419-e6685ca66e86",
                            PermissionId = "18",
                            RoleId = "HomeOwnerId"
                        },
                        new
                        {
                            RoleSystemPermissionId = "43fca287-1e37-43c0-8ef1-7cd46a237e14",
                            PermissionId = "19",
                            RoleId = "HomeOwnerId"
                        });
                });

            modelBuilder.Entity("Homify.BusinessLogic.Cameras.Entities.Camera", b =>
                {
                    b.HasBaseType("Homify.BusinessLogic.Devices.Device");

                    b.Property<bool>("IsExterior")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInterior")
                        .HasColumnType("bit");

                    b.ToTable("Cameras", (string)null);
                });

            modelBuilder.Entity("Homify.BusinessLogic.Sensors.Entities.Sensor", b =>
                {
                    b.HasBaseType("Homify.BusinessLogic.Devices.Device");

                    b.ToTable("Sensors", (string)null);
                });

            modelBuilder.Entity("Homify.BusinessLogic.Admins.Entities.Admin", b =>
                {
                    b.HasBaseType("Homify.BusinessLogic.Users.Entities.User");

                    b.ToTable("Admins", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "SeedAdminId",
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 10, 4, 0, 4, 6, 947, DateTimeKind.Unspecified).AddTicks(235), new TimeSpan(0, 0, 0, 0, 0)),
                            Email = "admin@domain.com",
                            LastName = "LastName",
                            Name = "Admin",
                            Password = ".Popso212",
                            RoleId = "AdminId"
                        });
                });

            modelBuilder.Entity("Homify.BusinessLogic.CompanyOwners.CompanyOwner", b =>
                {
                    b.HasBaseType("Homify.BusinessLogic.Users.Entities.User");

                    b.Property<bool>("IsIncomplete")
                        .HasColumnType("bit");

                    b.ToTable("CompanyOwners");

                    b.HasData(
                        new
                        {
                            Id = "SeedCompanyOwnerId",
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 10, 4, 0, 4, 6, 947, DateTimeKind.Unspecified).AddTicks(257), new TimeSpan(0, 0, 0, 0, 0)),
                            Email = "companyowner@domain.com",
                            LastName = "LastName",
                            Name = "CompanyOwner",
                            Password = ".Popso212",
                            RoleId = "CompanyOwnerId",
                            IsIncomplete = true
                        });
                });

            modelBuilder.Entity("Homify.BusinessLogic.HomeOwners.HomeOwner", b =>
                {
                    b.HasBaseType("Homify.BusinessLogic.Users.Entities.User");

                    b.Property<string>("ProfilePicture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("HomeOwners", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "SeedHomeOwnerId",
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 10, 4, 0, 4, 6, 947, DateTimeKind.Unspecified).AddTicks(246), new TimeSpan(0, 0, 0, 0, 0)),
                            Email = "homeowner@domain.com",
                            LastName = "LastName",
                            Name = "Homeowner",
                            Password = ".Popso212",
                            RoleId = "HomeOwnerId",
                            ProfilePicture = "picture"
                        });
                });

            modelBuilder.Entity("Homify.BusinessLogic.Companies.Company", b =>
                {
                    b.HasOne("Homify.BusinessLogic.CompanyOwners.CompanyOwner", "Owner")
                        .WithOne("Company")
                        .HasForeignKey("Homify.BusinessLogic.Companies.Company", "OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("Homify.BusinessLogic.Devices.Device", b =>
                {
                    b.HasOne("Homify.BusinessLogic.Companies.Company", "Company")
                        .WithMany("Devices")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Homify.BusinessLogic.HomeDevices.HomeDevice", b =>
                {
                    b.HasOne("Homify.BusinessLogic.Devices.Device", "Device")
                        .WithMany()
                        .HasForeignKey("DeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Homify.BusinessLogic.Homes.Entities.Home", "Home")
                        .WithMany("Devices")
                        .HasForeignKey("HomeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Device");

                    b.Navigation("Home");
                });

            modelBuilder.Entity("Homify.BusinessLogic.HomeUsers.HomeUser", b =>
                {
                    b.HasOne("Homify.BusinessLogic.Homes.Entities.Home", "Home")
                        .WithMany("Members")
                        .HasForeignKey("HomeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Homify.BusinessLogic.Users.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Home");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Homify.BusinessLogic.Homes.Entities.Home", b =>
                {
                    b.HasOne("Homify.BusinessLogic.HomeOwners.HomeOwner", "Owner")
                        .WithMany("Homes")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("Homify.BusinessLogic.Notifications.Entities.Notification", b =>
                {
                    b.HasOne("Homify.BusinessLogic.Devices.Device", "Device")
                        .WithMany()
                        .HasForeignKey("DeviceId");

                    b.Navigation("Device");
                });

            modelBuilder.Entity("Homify.BusinessLogic.Sessions.Entities.Session", b =>
                {
                    b.HasOne("Homify.BusinessLogic.Users.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Homify.BusinessLogic.Users.Entities.User", b =>
                {
                    b.HasOne("Homify.BusinessLogic.Roles.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Homify.DataAccess.Contexts.HomifyDbContext+HomeUserHomePermission", b =>
                {
                    b.HasOne("Homify.BusinessLogic.Homes.Entities.HomePermission", "HomePermission")
                        .WithMany()
                        .HasForeignKey("HomePermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Homify.BusinessLogic.HomeUsers.HomeUser", "HomeUser")
                        .WithMany()
                        .HasForeignKey("HomeUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HomePermission");

                    b.Navigation("HomeUser");
                });

            modelBuilder.Entity("Homify.DataAccess.Contexts.HomifyDbContext+RoleSystemPermission", b =>
                {
                    b.HasOne("Homify.BusinessLogic.SystemPermissions.SystemPermission", "Permission")
                        .WithMany()
                        .HasForeignKey("PermissionId");

                    b.HasOne("Homify.BusinessLogic.Roles.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId");

                    b.Navigation("Permission");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Homify.BusinessLogic.Cameras.Entities.Camera", b =>
                {
                    b.HasOne("Homify.BusinessLogic.Devices.Device", null)
                        .WithOne()
                        .HasForeignKey("Homify.BusinessLogic.Cameras.Entities.Camera", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Homify.BusinessLogic.Sensors.Entities.Sensor", b =>
                {
                    b.HasOne("Homify.BusinessLogic.Devices.Device", null)
                        .WithOne()
                        .HasForeignKey("Homify.BusinessLogic.Sensors.Entities.Sensor", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Homify.BusinessLogic.Admins.Entities.Admin", b =>
                {
                    b.HasOne("Homify.BusinessLogic.Users.Entities.User", null)
                        .WithOne()
                        .HasForeignKey("Homify.BusinessLogic.Admins.Entities.Admin", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Homify.BusinessLogic.CompanyOwners.CompanyOwner", b =>
                {
                    b.HasOne("Homify.BusinessLogic.Users.Entities.User", null)
                        .WithOne()
                        .HasForeignKey("Homify.BusinessLogic.CompanyOwners.CompanyOwner", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Homify.BusinessLogic.HomeOwners.HomeOwner", b =>
                {
                    b.HasOne("Homify.BusinessLogic.Users.Entities.User", null)
                        .WithOne()
                        .HasForeignKey("Homify.BusinessLogic.HomeOwners.HomeOwner", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Homify.BusinessLogic.Companies.Company", b =>
                {
                    b.Navigation("Devices");
                });

            modelBuilder.Entity("Homify.BusinessLogic.Homes.Entities.Home", b =>
                {
                    b.Navigation("Devices");

                    b.Navigation("Members");
                });

            modelBuilder.Entity("Homify.BusinessLogic.CompanyOwners.CompanyOwner", b =>
                {
                    b.Navigation("Company");
                });

            modelBuilder.Entity("Homify.BusinessLogic.HomeOwners.HomeOwner", b =>
                {
                    b.Navigation("Homes");
                });
#pragma warning restore 612, 618
        }
    }
}
