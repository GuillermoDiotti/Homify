// <auto-generated />
using System;
using Homify.DataAccess.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Homify.DataAccess.Migrations
{
    [DbContext(typeof(HomifyDbContext))]
    partial class HomifyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Homify.BusinessLogic.Companies.Company", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LogoUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Rut")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId")
                        .IsUnique();

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("Homify.BusinessLogic.Devices.Device", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CompanyId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PpalPicture")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Devices");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("Homify.BusinessLogic.HomeDevices.HomeDevice", b =>
                {
                    b.Property<string>("HomeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DeviceId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Connected")
                        .HasColumnType("bit");

                    b.Property<int>("HardwareId")
                        .HasColumnType("int");

                    b.Property<bool>("MovementDetection")
                        .HasColumnType("bit");

                    b.Property<bool>("PeopleDetection")
                        .HasColumnType("bit");

                    b.HasKey("HomeId", "DeviceId");

                    b.HasIndex("DeviceId");

                    b.ToTable("HomeDevices");
                });

            modelBuilder.Entity("Homify.BusinessLogic.HomeUsers.HomeUser", b =>
                {
                    b.Property<string>("HomeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsNotificable")
                        .HasColumnType("bit");

                    b.HasKey("HomeId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("HomeUsers", (string)null);
                });

            modelBuilder.Entity("Homify.BusinessLogic.Homes.Entities.Home", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Latitude")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Longitude")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaxMembers")
                        .HasColumnType("int");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Homes");
                });

            modelBuilder.Entity("Homify.BusinessLogic.Homes.Entities.HomePermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("HomeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HomeId", "UserId");

                    b.ToTable("HomePermission");
                });

            modelBuilder.Entity("Homify.BusinessLogic.Notifications.Entities.Notification", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTimeOffset?>("Date")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeviceId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Event")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("DeviceId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("Homify.BusinessLogic.Roles.Role", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = "adminid",
                            Name = "ADMINISTRATOR"
                        },
                        new
                        {
                            Id = "companyownerId",
                            Name = "COMPANYOWNER"
                        },
                        new
                        {
                            Id = "homeownerId",
                            Name = "HOMEOWNER"
                        });
                });

            modelBuilder.Entity("Homify.BusinessLogic.Sessions.Entities.Session", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AuthToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("Homify.BusinessLogic.SystemPermissions.SystemPermission", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SystemPermissions");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            Value = "admins-Create"
                        },
                        new
                        {
                            Id = "2",
                            Value = "admins-Delete"
                        },
                        new
                        {
                            Id = "3",
                            Value = "admins-AllAccounts"
                        },
                        new
                        {
                            Id = "4",
                            Value = "company-owners-Create"
                        },
                        new
                        {
                            Id = "5",
                            Value = "homes-ObtainCompanies"
                        },
                        new
                        {
                            Id = "6",
                            Value = "companies-Create"
                        },
                        new
                        {
                            Id = "7",
                            Value = "devices-RegisterCamera"
                        },
                        new
                        {
                            Id = "8",
                            Value = "companies-RegisterSensor"
                        },
                        new
                        {
                            Id = "9",
                            Value = "homes-Create"
                        },
                        new
                        {
                            Id = "10",
                            Value = "homes-UpdateMembersList"
                        },
                        new
                        {
                            Id = "11",
                            Value = "homes-UpdateHomeDevice"
                        },
                        new
                        {
                            Id = "12",
                            Value = "homes-ObtainMembers"
                        },
                        new
                        {
                            Id = "13",
                            Value = "homes-ObtainHomeDevices"
                        },
                        new
                        {
                            Id = "14",
                            Value = "homes-NotificatedMembers"
                        },
                        new
                        {
                            Id = "15",
                            Value = "notifications-ObtainNotifications"
                        },
                        new
                        {
                            Id = "16",
                            Value = "notifications-UpdateNotification"
                        },
                        new
                        {
                            Id = "17",
                            Value = "devices-ViewRegistered"
                        },
                        new
                        {
                            Id = "18",
                            Value = "companies-ViewSupported"
                        },
                        new
                        {
                            Id = "19",
                            Value = "notifications-Create"
                        });
                });

            modelBuilder.Entity("Homify.BusinessLogic.Users.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("Homify.DataAccess.Contexts.HomifyDbContext+RoleSystemPermission", b =>
                {
                    b.Property<string>("RoleSystemPermissionId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PermissionId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("RoleSystemPermissionId");

                    b.HasIndex("PermissionId");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleSystemPermissions");

                    b.HasData(
                        new
                        {
                            RoleSystemPermissionId = "b6c42153-46b8-44a5-b4cd-a0f1c393e473",
                            PermissionId = "1",
                            RoleId = "adminid"
                        },
                        new
                        {
                            RoleSystemPermissionId = "52036ef0-b29f-49fc-a9e5-ce587eb1f8fc",
                            PermissionId = "2",
                            RoleId = "adminid"
                        },
                        new
                        {
                            RoleSystemPermissionId = "0482207e-9010-4a58-ab88-23db33562fcd",
                            PermissionId = "3",
                            RoleId = "adminid"
                        },
                        new
                        {
                            RoleSystemPermissionId = "cc63d5ab-456d-4587-8d2d-727bac6b65e4",
                            PermissionId = "4",
                            RoleId = "adminid"
                        },
                        new
                        {
                            RoleSystemPermissionId = "56cd2c12-f5bd-4827-b6bb-df89b88ddab1",
                            PermissionId = "5",
                            RoleId = "adminid"
                        },
                        new
                        {
                            RoleSystemPermissionId = "9e47b295-6e2f-4e5a-81bd-ddc727a6ce23",
                            PermissionId = "6",
                            RoleId = "companyownerId"
                        },
                        new
                        {
                            RoleSystemPermissionId = "21f8dbd4-a4c2-4293-b9ed-385c029c3dce",
                            PermissionId = "7",
                            RoleId = "companyownerId"
                        },
                        new
                        {
                            RoleSystemPermissionId = "7769ce1e-5bd9-4e65-8ef6-f033ce06d5a6",
                            PermissionId = "8",
                            RoleId = "companyownerId"
                        },
                        new
                        {
                            RoleSystemPermissionId = "e1990255-736d-495b-b398-18f16083c8f5",
                            PermissionId = "9",
                            RoleId = "homeownerId"
                        },
                        new
                        {
                            RoleSystemPermissionId = "9022e1b8-0201-4e46-a5dd-08a7484a571e",
                            PermissionId = "10",
                            RoleId = "homeownerId"
                        },
                        new
                        {
                            RoleSystemPermissionId = "cfe2e139-59e4-45cc-85a9-e7b9111170ea",
                            PermissionId = "11",
                            RoleId = "homeownerId"
                        },
                        new
                        {
                            RoleSystemPermissionId = "aaea7282-788b-4fb9-b0e6-6b07762730c7",
                            PermissionId = "12",
                            RoleId = "homeownerId"
                        },
                        new
                        {
                            RoleSystemPermissionId = "1c752c84-71e7-416f-bbbd-4f8657aecdf6",
                            PermissionId = "13",
                            RoleId = "homeownerId"
                        },
                        new
                        {
                            RoleSystemPermissionId = "f0186d7e-d00e-4e00-b1b8-ad52eac6fdb1",
                            PermissionId = "14",
                            RoleId = "homeownerId"
                        },
                        new
                        {
                            RoleSystemPermissionId = "3d09ab14-2c0a-4d15-a3b1-c88f934d34a8",
                            PermissionId = "15",
                            RoleId = "homeownerId"
                        },
                        new
                        {
                            RoleSystemPermissionId = "e73a9385-b37a-4222-b2fa-23c5febfdbb8",
                            PermissionId = "16",
                            RoleId = "homeownerId"
                        },
                        new
                        {
                            RoleSystemPermissionId = "a99c4e8f-a22a-4ee6-955a-d53924383d61",
                            PermissionId = "17",
                            RoleId = "homeownerId"
                        },
                        new
                        {
                            RoleSystemPermissionId = "726d4ee0-3090-433d-9994-f1b78b9754c1",
                            PermissionId = "18",
                            RoleId = "homeownerId"
                        },
                        new
                        {
                            RoleSystemPermissionId = "891655a1-41d4-4176-8c38-3024b95b8629",
                            PermissionId = "19",
                            RoleId = "homeownerId"
                        });
                });

            modelBuilder.Entity("Homify.BusinessLogic.Cameras.Entities.Camera", b =>
                {
                    b.HasBaseType("Homify.BusinessLogic.Devices.Device");

                    b.Property<bool>("IsExterior")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInterior")
                        .HasColumnType("bit");

                    b.ToTable("Cameras", (string)null);
                });

            modelBuilder.Entity("Homify.BusinessLogic.Sensors.Entities.Sensor", b =>
                {
                    b.HasBaseType("Homify.BusinessLogic.Devices.Device");

                    b.ToTable("Sensors", (string)null);
                });

            modelBuilder.Entity("Homify.BusinessLogic.Admins.Entities.Admin", b =>
                {
                    b.HasBaseType("Homify.BusinessLogic.Users.Entities.User");

                    b.ToTable("Admins", (string)null);
                });

            modelBuilder.Entity("Homify.BusinessLogic.CompanyOwners.CompanyOwner", b =>
                {
                    b.HasBaseType("Homify.BusinessLogic.Users.Entities.User");

                    b.Property<bool>("IsIncomplete")
                        .HasColumnType("bit");

                    b.ToTable("CompanyOwners");
                });

            modelBuilder.Entity("Homify.BusinessLogic.HomeOwners.HomeOwner", b =>
                {
                    b.HasBaseType("Homify.BusinessLogic.Users.Entities.User");

                    b.Property<string>("ProfilePicture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("HomeOwners", (string)null);
                });

            modelBuilder.Entity("Homify.BusinessLogic.Companies.Company", b =>
                {
                    b.HasOne("Homify.BusinessLogic.CompanyOwners.CompanyOwner", "Owner")
                        .WithOne("Company")
                        .HasForeignKey("Homify.BusinessLogic.Companies.Company", "OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("Homify.BusinessLogic.Devices.Device", b =>
                {
                    b.HasOne("Homify.BusinessLogic.Companies.Company", "Company")
                        .WithMany("Devices")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Homify.BusinessLogic.HomeDevices.HomeDevice", b =>
                {
                    b.HasOne("Homify.BusinessLogic.Devices.Device", "Device")
                        .WithMany()
                        .HasForeignKey("DeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Homify.BusinessLogic.Homes.Entities.Home", "Home")
                        .WithMany("Devices")
                        .HasForeignKey("HomeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Device");

                    b.Navigation("Home");
                });

            modelBuilder.Entity("Homify.BusinessLogic.HomeUsers.HomeUser", b =>
                {
                    b.HasOne("Homify.BusinessLogic.Homes.Entities.Home", "Home")
                        .WithMany("NofificatedMembers")
                        .HasForeignKey("HomeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Homify.BusinessLogic.Users.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Home");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Homify.BusinessLogic.Homes.Entities.Home", b =>
                {
                    b.HasOne("Homify.BusinessLogic.HomeOwners.HomeOwner", "Owner")
                        .WithMany("Homes")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("Homify.BusinessLogic.Homes.Entities.HomePermission", b =>
                {
                    b.HasOne("Homify.BusinessLogic.HomeUsers.HomeUser", "HomeUser")
                        .WithMany("Permissions")
                        .HasForeignKey("HomeId", "UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("HomeUser");
                });

            modelBuilder.Entity("Homify.BusinessLogic.Notifications.Entities.Notification", b =>
                {
                    b.HasOne("Homify.BusinessLogic.Devices.Device", "Device")
                        .WithMany()
                        .HasForeignKey("DeviceId");

                    b.Navigation("Device");
                });

            modelBuilder.Entity("Homify.BusinessLogic.Sessions.Entities.Session", b =>
                {
                    b.HasOne("Homify.BusinessLogic.Users.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Homify.BusinessLogic.Users.Entities.User", b =>
                {
                    b.HasOne("Homify.BusinessLogic.Roles.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Homify.DataAccess.Contexts.HomifyDbContext+RoleSystemPermission", b =>
                {
                    b.HasOne("Homify.BusinessLogic.SystemPermissions.SystemPermission", "Permission")
                        .WithMany()
                        .HasForeignKey("PermissionId");

                    b.HasOne("Homify.BusinessLogic.Roles.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId");

                    b.Navigation("Permission");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Homify.BusinessLogic.Cameras.Entities.Camera", b =>
                {
                    b.HasOne("Homify.BusinessLogic.Devices.Device", null)
                        .WithOne()
                        .HasForeignKey("Homify.BusinessLogic.Cameras.Entities.Camera", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Homify.BusinessLogic.Sensors.Entities.Sensor", b =>
                {
                    b.HasOne("Homify.BusinessLogic.Devices.Device", null)
                        .WithOne()
                        .HasForeignKey("Homify.BusinessLogic.Sensors.Entities.Sensor", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Homify.BusinessLogic.Admins.Entities.Admin", b =>
                {
                    b.HasOne("Homify.BusinessLogic.Users.Entities.User", null)
                        .WithOne()
                        .HasForeignKey("Homify.BusinessLogic.Admins.Entities.Admin", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Homify.BusinessLogic.CompanyOwners.CompanyOwner", b =>
                {
                    b.HasOne("Homify.BusinessLogic.Users.Entities.User", null)
                        .WithOne()
                        .HasForeignKey("Homify.BusinessLogic.CompanyOwners.CompanyOwner", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Homify.BusinessLogic.HomeOwners.HomeOwner", b =>
                {
                    b.HasOne("Homify.BusinessLogic.Users.Entities.User", null)
                        .WithOne()
                        .HasForeignKey("Homify.BusinessLogic.HomeOwners.HomeOwner", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Homify.BusinessLogic.Companies.Company", b =>
                {
                    b.Navigation("Devices");
                });

            modelBuilder.Entity("Homify.BusinessLogic.HomeUsers.HomeUser", b =>
                {
                    b.Navigation("Permissions");
                });

            modelBuilder.Entity("Homify.BusinessLogic.Homes.Entities.Home", b =>
                {
                    b.Navigation("Devices");

                    b.Navigation("NofificatedMembers");
                });

            modelBuilder.Entity("Homify.BusinessLogic.CompanyOwners.CompanyOwner", b =>
                {
                    b.Navigation("Company");
                });

            modelBuilder.Entity("Homify.BusinessLogic.HomeOwners.HomeOwner", b =>
                {
                    b.Navigation("Homes");
                });
#pragma warning restore 612, 618
        }
    }
}
