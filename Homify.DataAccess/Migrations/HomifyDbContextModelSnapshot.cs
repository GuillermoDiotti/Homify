// <auto-generated />
using Homify.DataAccess.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Homify.DataAccess.Migrations
{
    [DbContext(typeof(HomifyDbContext))]
    partial class HomifyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Homify.BusinessLogic.Companies.Company", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LogoUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Rut")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId")
                        .IsUnique();

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("Homify.BusinessLogic.Devices.Device", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CompanyId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("MovementDetection")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PeopleDetection")
                        .HasColumnType("bit");

                    b.Property<string>("Photos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PpalPicture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("WindowDetection")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Devices");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("Homify.BusinessLogic.HomeDevices.Entities.HomeDevice", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Connected")
                        .HasColumnType("bit");

                    b.Property<string>("CustomName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviceId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("HardwareId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HomeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("RoomId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("DeviceId");

                    b.HasIndex("HomeId");

                    b.HasIndex("RoomId");

                    b.ToTable("HomeDevices");
                });

            modelBuilder.Entity("Homify.BusinessLogic.HomeUsers.HomeUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("HomeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsNotificable")
                        .HasColumnType("bit");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("HomeId");

                    b.HasIndex("UserId");

                    b.ToTable("HomeUsers", (string)null);
                });

            modelBuilder.Entity("Homify.BusinessLogic.Homes.Entities.Home", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Alias")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Latitude")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Longitude")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaxMembers")
                        .HasColumnType("int");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Homes");
                });

            modelBuilder.Entity("Homify.BusinessLogic.Notifications.Entities.Notification", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Detail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Event")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HomeDeviceId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("HomeUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("HomeDeviceId");

                    b.HasIndex("HomeUserId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("Homify.BusinessLogic.Permissions.HomePermissions.Entities.HomePermission", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HomePermission");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            Value = "AddDevices"
                        },
                        new
                        {
                            Id = "2",
                            Value = "ListDevices"
                        },
                        new
                        {
                            Id = "3",
                            Value = "ChangeDeviceName"
                        });
                });

            modelBuilder.Entity("Homify.BusinessLogic.Permissions.SystemPermissions.Entities.SystemPermission", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SystemPermissions");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            Value = "admins-Create"
                        },
                        new
                        {
                            Id = "2",
                            Value = "admins-Delete"
                        },
                        new
                        {
                            Id = "3",
                            Value = "admins-AllAccounts"
                        },
                        new
                        {
                            Id = "4",
                            Value = "company-owners-Create"
                        },
                        new
                        {
                            Id = "5",
                            Value = "homes-ObtainCompanies"
                        },
                        new
                        {
                            Id = "6",
                            Value = "companies-Create"
                        },
                        new
                        {
                            Id = "7",
                            Value = "devices-RegisterCamera"
                        },
                        new
                        {
                            Id = "8",
                            Value = "companies-RegisterSensor"
                        },
                        new
                        {
                            Id = "9",
                            Value = "homes-Create"
                        },
                        new
                        {
                            Id = "10",
                            Value = "homes-UpdateMembersList"
                        },
                        new
                        {
                            Id = "11",
                            Value = "homes-UpdateHomeDevice"
                        },
                        new
                        {
                            Id = "12",
                            Value = "homes-ObtainMembers"
                        },
                        new
                        {
                            Id = "13",
                            Value = "homes-ObtainHomeDevices"
                        },
                        new
                        {
                            Id = "14",
                            Value = "homes-NotificatedMembers"
                        },
                        new
                        {
                            Id = "15",
                            Value = "notifications-ObtainNotifications"
                        },
                        new
                        {
                            Id = "16",
                            Value = "notifications-UpdateNotification"
                        },
                        new
                        {
                            Id = "17",
                            Value = "devices-ViewRegistered"
                        },
                        new
                        {
                            Id = "18",
                            Value = "companies-ViewSupported"
                        },
                        new
                        {
                            Id = "19",
                            Value = "notifications-Create"
                        });
                });

            modelBuilder.Entity("Homify.BusinessLogic.Roles.Entities.Role", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = "AdminId",
                            Name = "ADMINISTRATOR"
                        },
                        new
                        {
                            Id = "CompanyOwnerId",
                            Name = "COMPANYOWNER"
                        },
                        new
                        {
                            Id = "HomeOwnerId",
                            Name = "HOMEOWNER"
                        });
                });

            modelBuilder.Entity("Homify.BusinessLogic.Sessions.Entities.Session", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AuthToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Sessions");

                    b.HasData(
                        new
                        {
                            Id = "SeedAdminSessionId",
                            AuthToken = "SomeAdminToken123",
                            UserId = "SeedAdminId"
                        },
                        new
                        {
                            Id = "SeedHomeOwnerSessionId",
                            AuthToken = "SomeHomeOwnerToken123",
                            UserId = "SeedHomeOwnerId"
                        },
                        new
                        {
                            Id = "SeedCompanyOwnerSessionId",
                            AuthToken = "SomeCompanyOwnerToken123",
                            UserId = "SeedCompanyOwnerId"
                        });
                });

            modelBuilder.Entity("Homify.BusinessLogic.UserRoles.Entities.UserRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            Id = "33f95c89-fbf6-4c2e-87c2-c931ccf75a21",
                            RoleId = "AdminId",
                            UserId = "SeedAdminId"
                        },
                        new
                        {
                            Id = "0757278c-5a40-4072-929c-f428af27d92a",
                            RoleId = "HomeOwnerId",
                            UserId = "SeedHomeOwnerId"
                        },
                        new
                        {
                            Id = "d7c5e9b0-59f2-4bea-8540-a70151a24fb0",
                            RoleId = "CompanyOwnerId",
                            UserId = "SeedCompanyOwnerId"
                        });
                });

            modelBuilder.Entity("Homify.BusinessLogic.Users.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfilePicture")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("Homify.DataAccess.Contexts.HomifyDbContext+HomeUserHomePermission", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("HomePermissionId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("HomeUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("HomePermissionId");

                    b.HasIndex("HomeUserId");

                    b.ToTable("HomeUserHomePermission");
                });

            modelBuilder.Entity("Homify.DataAccess.Contexts.HomifyDbContext+RoleSystemPermission", b =>
                {
                    b.Property<string>("RoleSystemPermissionId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PermissionId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("RoleSystemPermissionId");

                    b.HasIndex("PermissionId");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleSystemPermissions");

                    b.HasData(
                        new
                        {
                            RoleSystemPermissionId = "f5c485c7-195a-4954-9885-c549f2663d43",
                            PermissionId = "1",
                            RoleId = "AdminId"
                        },
                        new
                        {
                            RoleSystemPermissionId = "3d9a7a71-acfb-484c-b39e-70a0dc13d18a",
                            PermissionId = "2",
                            RoleId = "AdminId"
                        },
                        new
                        {
                            RoleSystemPermissionId = "47be7b51-b757-4728-bffc-cc8de299a53d",
                            PermissionId = "3",
                            RoleId = "AdminId"
                        },
                        new
                        {
                            RoleSystemPermissionId = "f4766bb8-dce8-4821-b309-7efb232ed402",
                            PermissionId = "4",
                            RoleId = "AdminId"
                        },
                        new
                        {
                            RoleSystemPermissionId = "cc6de9d9-7cf4-4f02-b619-c6032408f50a",
                            PermissionId = "5",
                            RoleId = "AdminId"
                        },
                        new
                        {
                            RoleSystemPermissionId = "19cc6758-ae2e-44cb-b7df-95990d44c676",
                            PermissionId = "6",
                            RoleId = "CompanyOwnerId"
                        },
                        new
                        {
                            RoleSystemPermissionId = "5119448f-3210-45c0-b8eb-a867b9961d0d",
                            PermissionId = "7",
                            RoleId = "CompanyOwnerId"
                        },
                        new
                        {
                            RoleSystemPermissionId = "34894d8e-a618-4655-be1b-6969835662cc",
                            PermissionId = "8",
                            RoleId = "CompanyOwnerId"
                        },
                        new
                        {
                            RoleSystemPermissionId = "9a8c9d73-8083-4aae-89c8-04b1a848bd23",
                            PermissionId = "9",
                            RoleId = "HomeOwnerId"
                        },
                        new
                        {
                            RoleSystemPermissionId = "3ef96c9b-706e-467e-b12a-82b1202dbd99",
                            PermissionId = "10",
                            RoleId = "HomeOwnerId"
                        },
                        new
                        {
                            RoleSystemPermissionId = "9cbc4a29-9a87-4c11-b677-beb791c51eab",
                            PermissionId = "11",
                            RoleId = "HomeOwnerId"
                        },
                        new
                        {
                            RoleSystemPermissionId = "5952af66-6ffe-4c3b-ad99-4fcb82a383b4",
                            PermissionId = "12",
                            RoleId = "HomeOwnerId"
                        },
                        new
                        {
                            RoleSystemPermissionId = "0fe9f137-804d-422d-9523-8fb200875db8",
                            PermissionId = "13",
                            RoleId = "HomeOwnerId"
                        },
                        new
                        {
                            RoleSystemPermissionId = "92759e0c-7632-4d29-bcf0-7339f9e10950",
                            PermissionId = "14",
                            RoleId = "HomeOwnerId"
                        },
                        new
                        {
                            RoleSystemPermissionId = "f3e9b2e1-3ae7-4c95-8e3c-82bd9af31fa6",
                            PermissionId = "15",
                            RoleId = "HomeOwnerId"
                        },
                        new
                        {
                            RoleSystemPermissionId = "90a78fab-3d3a-4dbf-9fd3-6201b01bdb43",
                            PermissionId = "16",
                            RoleId = "HomeOwnerId"
                        },
                        new
                        {
                            RoleSystemPermissionId = "6c068b64-874e-4d71-972d-fcb2e2a69bbf",
                            PermissionId = "17",
                            RoleId = "HomeOwnerId"
                        },
                        new
                        {
                            RoleSystemPermissionId = "81e6cac6-217b-4aee-8299-1e86912cbbf6",
                            PermissionId = "18",
                            RoleId = "HomeOwnerId"
                        },
                        new
                        {
                            RoleSystemPermissionId = "a7d0c17d-f174-463b-831f-56f56f26ccd7",
                            PermissionId = "19",
                            RoleId = "HomeOwnerId"
                        });
                });

            modelBuilder.Entity("Homify.DataAccess.Repositories.Rooms.Entities.Room", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("HomeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HomeId");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("Homify.BusinessLogic.Cameras.Entities.Camera", b =>
                {
                    b.HasBaseType("Homify.BusinessLogic.Devices.Device");

                    b.Property<bool>("IsExterior")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInterior")
                        .HasColumnType("bit");

                    b.ToTable("Cameras", (string)null);
                });

            modelBuilder.Entity("Homify.BusinessLogic.Sensors.Entities.Sensor", b =>
                {
                    b.HasBaseType("Homify.BusinessLogic.Devices.Device");

                    b.ToTable("Sensors", (string)null);
                });

            modelBuilder.Entity("Homify.BusinessLogic.Admins.Entities.Admin", b =>
                {
                    b.HasBaseType("Homify.BusinessLogic.Users.Entities.User");

                    b.ToTable("Admins", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "SeedAdminId",
                            CreatedAt = "02/11/2024",
                            Email = "admin@domain.com",
                            LastName = "LastName",
                            Name = "Admin",
                            Password = ".Popso212"
                        });
                });

            modelBuilder.Entity("Homify.BusinessLogic.CompanyOwners.Entities.CompanyOwner", b =>
                {
                    b.HasBaseType("Homify.BusinessLogic.Users.Entities.User");

                    b.Property<bool>("IsIncomplete")
                        .HasColumnType("bit");

                    b.ToTable("CompanyOwners");

                    b.HasData(
                        new
                        {
                            Id = "SeedCompanyOwnerId",
                            CreatedAt = "02/11/2024",
                            Email = "companyowner@domain.com",
                            LastName = "LastName",
                            Name = "CompanyOwner",
                            Password = ".Popso212",
                            IsIncomplete = true
                        });
                });

            modelBuilder.Entity("Homify.BusinessLogic.HomeOwners.HomeOwner", b =>
                {
                    b.HasBaseType("Homify.BusinessLogic.Users.Entities.User");

                    b.ToTable("HomeOwners", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "SeedHomeOwnerId",
                            CreatedAt = "02/11/2024",
                            Email = "homeowner@domain.com",
                            LastName = "LastName",
                            Name = "Homeowner",
                            Password = ".Popso212",
                            ProfilePicture = "picture"
                        });
                });

            modelBuilder.Entity("Homify.BusinessLogic.Companies.Company", b =>
                {
                    b.HasOne("Homify.BusinessLogic.CompanyOwners.Entities.CompanyOwner", "Owner")
                        .WithOne("Company")
                        .HasForeignKey("Homify.BusinessLogic.Companies.Company", "OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("Homify.BusinessLogic.Devices.Device", b =>
                {
                    b.HasOne("Homify.BusinessLogic.Companies.Company", "Company")
                        .WithMany("Devices")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Homify.BusinessLogic.HomeDevices.Entities.HomeDevice", b =>
                {
                    b.HasOne("Homify.BusinessLogic.Devices.Device", "Device")
                        .WithMany()
                        .HasForeignKey("DeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Homify.BusinessLogic.Homes.Entities.Home", "Home")
                        .WithMany("Devices")
                        .HasForeignKey("HomeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Homify.DataAccess.Repositories.Rooms.Entities.Room", null)
                        .WithMany("Devices")
                        .HasForeignKey("RoomId");

                    b.Navigation("Device");

                    b.Navigation("Home");
                });

            modelBuilder.Entity("Homify.BusinessLogic.HomeUsers.HomeUser", b =>
                {
                    b.HasOne("Homify.BusinessLogic.Homes.Entities.Home", "Home")
                        .WithMany("Members")
                        .HasForeignKey("HomeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Homify.BusinessLogic.Users.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Home");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Homify.BusinessLogic.Homes.Entities.Home", b =>
                {
                    b.HasOne("Homify.BusinessLogic.HomeOwners.HomeOwner", "Owner")
                        .WithMany("Homes")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("Homify.BusinessLogic.Notifications.Entities.Notification", b =>
                {
                    b.HasOne("Homify.BusinessLogic.HomeDevices.Entities.HomeDevice", "Device")
                        .WithMany()
                        .HasForeignKey("HomeDeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Homify.BusinessLogic.HomeUsers.HomeUser", "HomeUser")
                        .WithMany()
                        .HasForeignKey("HomeUserId");

                    b.Navigation("Device");

                    b.Navigation("HomeUser");
                });

            modelBuilder.Entity("Homify.BusinessLogic.Roles.Entities.Role", b =>
                {
                    b.HasOne("Homify.BusinessLogic.Users.Entities.User", null)
                        .WithMany("Roles")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Homify.BusinessLogic.Sessions.Entities.Session", b =>
                {
                    b.HasOne("Homify.BusinessLogic.Users.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Homify.BusinessLogic.UserRoles.Entities.UserRole", b =>
                {
                    b.HasOne("Homify.BusinessLogic.Roles.Entities.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId");

                    b.HasOne("Homify.BusinessLogic.Users.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Homify.DataAccess.Contexts.HomifyDbContext+HomeUserHomePermission", b =>
                {
                    b.HasOne("Homify.BusinessLogic.Permissions.HomePermissions.Entities.HomePermission", "HomePermission")
                        .WithMany()
                        .HasForeignKey("HomePermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Homify.BusinessLogic.HomeUsers.HomeUser", "HomeUser")
                        .WithMany()
                        .HasForeignKey("HomeUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HomePermission");

                    b.Navigation("HomeUser");
                });

            modelBuilder.Entity("Homify.DataAccess.Contexts.HomifyDbContext+RoleSystemPermission", b =>
                {
                    b.HasOne("Homify.BusinessLogic.Permissions.SystemPermissions.Entities.SystemPermission", "Permission")
                        .WithMany()
                        .HasForeignKey("PermissionId");

                    b.HasOne("Homify.BusinessLogic.Roles.Entities.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId");

                    b.Navigation("Permission");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Homify.DataAccess.Repositories.Rooms.Entities.Room", b =>
                {
                    b.HasOne("Homify.BusinessLogic.Homes.Entities.Home", "Home")
                        .WithMany("Rooms")
                        .HasForeignKey("HomeId");

                    b.Navigation("Home");
                });

            modelBuilder.Entity("Homify.BusinessLogic.Cameras.Entities.Camera", b =>
                {
                    b.HasOne("Homify.BusinessLogic.Devices.Device", null)
                        .WithOne()
                        .HasForeignKey("Homify.BusinessLogic.Cameras.Entities.Camera", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Homify.BusinessLogic.Sensors.Entities.Sensor", b =>
                {
                    b.HasOne("Homify.BusinessLogic.Devices.Device", null)
                        .WithOne()
                        .HasForeignKey("Homify.BusinessLogic.Sensors.Entities.Sensor", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Homify.BusinessLogic.Admins.Entities.Admin", b =>
                {
                    b.HasOne("Homify.BusinessLogic.Users.Entities.User", null)
                        .WithOne()
                        .HasForeignKey("Homify.BusinessLogic.Admins.Entities.Admin", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Homify.BusinessLogic.CompanyOwners.Entities.CompanyOwner", b =>
                {
                    b.HasOne("Homify.BusinessLogic.Users.Entities.User", null)
                        .WithOne()
                        .HasForeignKey("Homify.BusinessLogic.CompanyOwners.Entities.CompanyOwner", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Homify.BusinessLogic.HomeOwners.HomeOwner", b =>
                {
                    b.HasOne("Homify.BusinessLogic.Users.Entities.User", null)
                        .WithOne()
                        .HasForeignKey("Homify.BusinessLogic.HomeOwners.HomeOwner", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Homify.BusinessLogic.Companies.Company", b =>
                {
                    b.Navigation("Devices");
                });

            modelBuilder.Entity("Homify.BusinessLogic.Homes.Entities.Home", b =>
                {
                    b.Navigation("Devices");

                    b.Navigation("Members");

                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("Homify.BusinessLogic.Users.Entities.User", b =>
                {
                    b.Navigation("Roles");
                });

            modelBuilder.Entity("Homify.DataAccess.Repositories.Rooms.Entities.Room", b =>
                {
                    b.Navigation("Devices");
                });

            modelBuilder.Entity("Homify.BusinessLogic.CompanyOwners.Entities.CompanyOwner", b =>
                {
                    b.Navigation("Company");
                });

            modelBuilder.Entity("Homify.BusinessLogic.HomeOwners.HomeOwner", b =>
                {
                    b.Navigation("Homes");
                });
#pragma warning restore 612, 618
        }
    }
}
